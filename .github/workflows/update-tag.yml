name: Update Service tag
permissions:
  id-token: write
  contents: read
on:
  workflow_dispatch:
    inputs:
      tag:
        description: Which tag
        required: true
      service:
        description: Which service
        required: true
  repository_dispatch:
    types: [update-tag]
jobs:
  update-app-tag:
    name: Update app tag
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [prod] # If we have more environments, add them here
    steps:
      - uses: actions/checkout@v3

      - uses: simenandre/setup-inputs@v1
        id: inputs

      - run: echo ${{ steps.inputs.outputs.payload }}

      - uses: simenandre/pulumi-config@v2
        id: config
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        with:
          stack-name: Bjerk/${{ matrix.env }}
          key: ${{ steps.inputs.outputs.service }}:tag
          value: ${{ steps.inputs.outputs.tag }}

      - uses: simenandre/get-commit-changelog@v1
        if: ${{ steps.config.outputs.key }}
        id: changelog
        with:
          base: ${{ fromJson(steps.config.outputs.key).value }}
          head: ${{ steps.inputs.outputs.tag }}
          repository: flexisoftorg/${{ steps.inputs.outputs.service }}
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Commit changes
        if: steps.inputs.outputs.actor != 'renovate[bot]'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: |
            Bump ${{ steps.inputs.outputs.service }} tag to ${{ steps.inputs.outputs.tag }} on ${{ matrix.env }}
          commit_options: '--no-verify'
          commit_user_name: ${{ steps.inputs.outputs.actor }}
          commit_user_email:
            ${{ steps.inputs.outputs.actor }}@users.noreply.github.com

      - name: Send custom JSON data to Slack workflow
        if: steps.inputs.outputs.actor != 'renovate[bot]'
        uses: slackapi/slack-github-action@v1.24.0
        with:
          slack-message: |
            Bumped ${{ steps.inputs.outputs.service }} tag to
            ${{ steps.inputs.outputs.tag }} on ${{ matrix.env }}
            (done by ${{ steps.inputs.outputs.actor }})
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - name: Create Pull Request
        if: steps.inputs.outputs.actor == 'renovate[bot]'
        id: pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.BOT_GITHUB_TOKEN }}
          commit-message:
            bump ${{ steps.inputs.outputs.service }} to ${{
            steps.inputs.outputs.tag }} on ${{ matrix.env }}
          branch: bump-tag-${{ steps.inputs.outputs.service }}-${{ matrix.env }}
          title:
            'chore: bump ${{ steps.inputs.outputs.service }} tag to `${{
            steps.inputs.outputs.tag }}` on ${{ matrix.env }}'
          body: |
            Automated tag change on ${{ matrix.env }}. üéâ

            ${{ steps.changelog.outputs.changelog }}

      - name: Send custom JSON data to Slack workflow
        if: steps.inputs.outputs.actor == 'renovate[bot]'
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: >-
            {
              "text": "Automated PR created to bump ${{
            steps.inputs.outputs.service }} tag to ${{
            steps.inputs.outputs.tag }} on ${{ matrix.env }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Automated PR created to bump ${{
            steps.inputs.outputs.service }} tag to ${{
            steps.inputs.outputs.tag }} on ${{ matrix.env }}"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Go to PR ‚ü∂",
                        "emoji": true
                      },
                      "value": "go-to-pr",
                      "url": "${{ steps.pr.outputs.pull-request-url }}",
                      "action_id": "go-to-pr-action"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
